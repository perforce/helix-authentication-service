#
# Example environment configuration for use with the authentication service.
#
# When running the authentication service via systemd or `npm start`, create a
# file named .env in this directory, using this file as an example.
#
# When running the service using pm2, use the ecosystem.config.js file instead,
# as pm2 will read the environment settings from that file.
#
# See https://www.perforce.com/manuals/helix-auth-svc/ for documentation on the
# available settings in the authentication service.
#

# Path of certificate authority file for service to use when verifying client
# certificates, in particular the Helix Server loginhook extension.
#
CA_CERT_FILE='certs/ca.crt'

# HTTP Bearer authentication token for allowing access to the SCIM endpoint.
#
BEARER_TOKEN='keyboard cat'

# If set to 'production' then the pm2 process manager will cache settings.
# Otherwise has no effect on the application.
#
# NODE_ENV='production'

# The client identifier as provided by the OIDC identity provider.
#
# OIDC_CLIENT_ID='client_id'

# File containing the OIDC client secret value. Use this instead of
# OIDC_CLIENT_SECRET to avoid having the password exposed in the configuration.
#
# OIDC_CLIENT_SECRET_FILE='secrets/oidc_client.txt'

# The OIDC provider issuer URL.
#
# OIDC_ISSUER_URI='https://idp/oidc'

# URL of IdP Single Sign-On service.
#
# SAML_IDP_SSO_URL='https://idp/saml/sso'

# URL of IdP Single Log-Out service.
#
# SAML_IDP_SLO_URL='https://idp/saml/slo'

# The entity identifier (entityID) for the Helix Authentication Service.
#
# SAML_SP_ENTITY_ID='https://has.example.com'

# Public key of the certificate used by HAS when connecting to the IdP, and when
# responding to HTTPS requests from clients.
#
SP_CERT_FILE='certs/server.crt'

# The private key that corresponds to SP_CERT_FILE.
#
SP_KEY_FILE='certs/server.key'

# The authentication service base URL visible to end users. See the
# documentation for an explanation of how this setting is used to determine the
# port and protocol that the service will use.
#
# SVC_BASE_URI='https://has.example.com:3000'

# Define the IP address upon which the service will listen for requests.
#
# BIND_ADDRESS='0.0.0.0'

# Alternative to CA_CERT_FILE that specifies a directory containing certificates
# of multiple authorities that authorize client requests.
#
# CA_CERT_PATH=undefined

# Specify a name or pattern to match against the Common Name in the client
# certificate used to acquire the user profile data.
#
# CLIENT_CERT_CN=undefined

# Set to any value to enable debug logging in the service (writes to the
# console). The LOGGING setting overrides this setting.
#
# DEBUG=undefined

# The default authentication protocol to use. Can be oidc or saml.
#
# DEFAULT_PROTOCOL='saml'

# If set to any non-empty value, will cause the service to require the user to
# authenticate, even if the user is already authenticated.
#
# FORCE_AUTHN=false

# Path of the file containing the public certificate of the identity provider,
# used to validate signatures of incoming SAML responses.
#
# IDP_CERT_FILE=undefined

# Path of the configuration file that defines SAML service providers that will
# be connecting to the authentication service.
#
# IDP_CONFIG_FILE='./saml_idp.conf.js'

# This value is added to the login URL as a query parameter named 'instanceId'
# which can be used with a rule-based reverse proxy to achieve session affinity
# without relying on browser cookies.
#
# INSTANCE_ID='none'

# Path of a logging configuration file. Set to "none" to disable logging.
#
# LOGGING=undefined

# How long in seconds to wait for user to successfully authenticate.
#
# LOGIN_TIMEOUT=60

# Passphrase to be used to decrypt the private key given in SP_KEY_FILE
# or PFX_FILE, if the private key is encrypted.
# 
# KEY_PASSPHRASE=undefined

# File containing the passphrase to be used to decrypt the private key given in
# SP_KEY_FILE or PFX_FILE, if the private key is encrypted.
#
# KEY_PASSPHRASE_FILE=undefined

# The client secret as provided by the OIDC identity provider.
#
# OIDC_CLIENT_SECRET=undefined

# PKCS#12 formatted file containing the public and private key for the TLS/SSL
# certificate to be used by the service. Supercedes the SP_CERT_FILE and
# SP_KEY_FILE settings, if this setting is provided.
#
# PFX_FILE=undefined

# Override the port number in SVC_BASE_URI if running behind a reverse proxy.
#
# PORT=3000

# Override the protocol in SVC_BASE_URI if running behind a reverse proxy.
#
# PROTOCOL='http'

# The URL of a redis server which will be used to cache session data.
#
# REDIS_URL=undefined

# The authn context defines the method by which the user will authenticate with
# the IdP.
#
# SAML_AUTHN_CONTEXT='urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport'

# If set to true, do not request a specific authentication context. This is
# known to help when authenticating against Active Directory (AD FS) servers
#
# SAML_DISABLE_CONTEXT=true

# The entity identifier for the identity provider.
#
# SAML_IDP_ENTITY_ID=undefined

# URL of the IdP metadata configuration in XML format.
#
# SAML_IDP_METADATA_URL=undefined

# Path to an XML file containing the identity provider metadata, an alternative
# to specifying a URL in the SAML_IDP_METADATA_URL setting.
#
# SAML_IDP_METADATA_FILE=undefined

# Name of the property in the user profile to be used if nameID is missing,
# which is likely to be the case when using another authentication protocol
# (such as OIDC) with the identity provider (such as Okta).
#
# SAML_NAMEID_FIELD=undefined

# Specify the format of the NameID value, if necessary.
#
# SAML_NAMEID_FORMAT='urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified'

# Service provider audience value for AudienceRestriction assertions.
#
# SAML_SP_AUDIENCE=undefined

# Password used for encrypting the in-memory session data.
#
# SESSION_SECRET='keyboard cat'

# The algorithm used to sign the requests.
#
# SP_KEY_ALGO='sha256'

# To configure HAS to trust a reverse proxy for terminating SSL connections,
# specify the address of the proxy here.
#
# c.f. https://expressjs.com/en/guide/behind-proxies.html
#
# TRUST_PROXY=undefined

# The 'P4PORT' for connecting to Helix Core Server for SCIM support.
#
# P4PORT=192.168.1.3:1666

# The Perforce user with administrative access to manage users and groups.
#
# P4USER=super

# The password or ticket for the Perforce user.
#
# P4PASSWD=1D35D8580BAC82A101193611B0FD3EE6
